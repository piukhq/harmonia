[build-system]
requires = ["poetry-core", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry]
name = "harmonia"
version = "0.0.0"
description = ""
authors = ["Chris Latham <cl@bink.com>"]
license = "MIT"
readme = "README.md"
packages = [
    { include = "app" },
    { include = "harness" },
    { include = "settings.py" },
    { include = "rq_worker_settings.py" },
]

[[tool.poetry.source]]
name = "azure"
url = "https://pkgs.dev.azure.com/binkhq/_packaging/binkhq/pypi/simple/"
priority = "primary"

[tool.poetry.scripts]
tximport = "app.imports.cli:cli"
txexport = "app.exports.cli:cli"
txcore = "app.core.cli:cli"
txunmatched = "app.unmatched_transactions.cli:cli"

[tool.poetry.dependencies]
python = "^3.11"
alembic = "^1.8.1"
SQLAlchemy = "^1.4.40"
Flask = "^3.0.0"
Flask-Cors = "^3.0.10"
click = "^8.1.3"
redis = "^4.3.4"
APScheduler = "^3.9.1"
humanize = "^4.3.0"
apispec = "^6.4.0"
marshmallow = "^3.17.0"
pendulum = "^2.1.2"
apispec-webframeworks = "^0.5.2"
rq = "!=1.14.0"
pycryptodome = "^3.15.0"
azure-storage-blob = "^12.13.1"
marshmallow-sqlalchemy = "^0.28.1"
sentry-sdk = { version = "^1.34.0", extras = ["flask"] }
paramiko = "^2.11.0"
kombu = "^5.3.2"
hashids = "^1.3.1"
PGPy = "^0.6.0"
psycopg2-binary = "^2.9.3"
prometheus-client = "^0.14.1"
gunicorn = "^20.1.0"
user-token-store = "^1.1.6"
azure-oidc = "^1.0.1"
soteria = "^1.6.4"
harmonia-fixtures = "^1.2.1"
xenon = "^0.9.1"
result = "^0.16.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
mypy = "^0.971"
responses = "^0.21.0"
flake8 = "^5.0.4"
black = "^22.6.0"
toml = "^0.10.2"
ipython = "^8.4.0"
isort = { extras = ["pipfile"], version = "^5.10.1" }
xenon = "^0.9.0"
mimesis = "^6.0.0"
factory-boy = "^3.2.1"
prettyprinter = "^0.18.0"
time-machine = "^2.8.2"
fakeredis = "^2.3.0"
freezegun = "^1.4.0"

[tool.poetry-dynamic-versioning]
enable = true

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120

[tool.mypy]
ignore_missing_imports = true
no_site_packages = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.pyright]
reportGeneralTypeIssues = false
reportPrivateImportUsage = false

[tool.ruff]
line-length = 120
