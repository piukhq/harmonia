stages:
  - tests
  - build
  - tagging

tests:
  stage: tests
  before_script:
    - pipenv install --dev --system --deploy --ignore-pipfile
    - pipenv graph
  script:
    - export TXM_POSTGRES_USER=postgres
    - export TXM_POSTGRES_HOST=${POSTGRES_PORT_5432_TCP_ADDR}
    - export TXM_POSTGRES_DB=${POSTGRES_NAME}
    - export TXM_REDIS_USER=redis
    - export TXM_REDIS_HOST=${REDIS_PORT_6379_TCP_ADDR}
    - export TXM_REDIS_DB=0
    - export TXM_HERMES_URL="http://localhost"
    - export TXM_ATLAS_URL="http://localhost"
    - pytest --verbose --cov app --cov-report term-missing
  services:
    - postgres:9.4.4
    - redis:4

complexity:
  stage: tests
  before_script:
    - pipenv install --dev --system --deploy --ignore-pipfile
  script:
    - xenon --max-average A --max-modules B --max-absolute B .

style:
  stage: tests
  before_script:
    - pipenv install --dev --system --deploy --ignore-pipfile
  script:
    - flake8 && black --line-length 120 --check .

type-check:
  stage: tests
  before_script:
    - pipenv install --dev --system --deploy --ignore-pipfile
  script:
    - mypy --ignore-missing-imports app

build-latest:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --pull -t "$CI_REGISTRY/harmonia:latest" .
    - docker push "$CI_REGISTRY/harmonia:latest"
  only:
    - develop

tag-develop:
  stage: tagging
  image: binkops.azurecr.io/tagbot:latest
  environment: dev
  script:
    - tagbot --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" --source "$CI_REGISTRY/harmonia:latest" --tag "develop-$CI_COMMIT_SHORT_SHA"
  only:
    - develop
