name: ci

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types: [published]

jobs:
  tests:
    name: tests
    runs-on: ubuntu-latest
    env:
      TXM_POSTGRES_URI: postgresql://postgres@localhost/harmonia_test
      TXM_POSTGRES_TEST_URI: postgresql://postgres@localhost/harmonia_test
      TXM_REDIS_URL: redis://127.0.0.1:6379/0
      TXM_HERMES_URL: "http://localhost"
      TXM_AAD_TENANT_ID: ""
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: harmonia_test
      redis:
        image: redis:latest
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: pip install poetry
      - run: poetry config http-basic.azure jeff ${{ secrets.AZURE_DEVOPS_PAT }}
      - run: poetry install
      - run: poetry run scripts/cibuild

  release_staging:
    if: github.event_name == 'release' && github.event.action == 'published'
    name: release_staging
    environment: Staging
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - uses: actions/checkout@v4
      - name: tag_check
        run: |
          if ! [[ ${{ github.event.release.tag_name }} =~ [0-9]+.[0-9]+.[0-9]+ ]]; then
            exit 1;
          fi
      - uses: docker/login-action@v3
        with:
          registry: binkcore.azurecr.io
          username: binkcore
          password: ${{ secrets.ACR_BINKCORE_PASSWORD }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: |
            PIP_INDEX_URL=${{ secrets.AZURE_DEVOPS_PAT_URL }}
          tags: |
            binkcore.azurecr.io/${{ github.event.repository.name }}:${{ github.event.release.tag_name }}
            binkcore.azurecr.io/${{ github.event.repository.name }}:staging-${{ github.event.release.tag_name }}
            binkcore.azurecr.io/${{ github.event.repository.name }}:staging

  release_production:
    if: github.event_name == 'release' && github.event.action == 'published'
    name: release_production
    environment: Production
    needs: [release_staging]
    runs-on: ubuntu-latest
    container: ghcr.io/binkhq/tagbot:latest
    steps:
      - run: |-
          tagbot \
            --username binkcore \
            --password ${{ secrets.ACR_BINKCORE_PASSWORD }} \
            --source binkcore.azurecr.io/${{ github.event.repository.name }}:${{ github.event.release.tag_name }} \
            --tag prod-${{ github.event.release.tag_name }}
          tagbot \
            --username binkcore \
            --password ${{ secrets.ACR_BINKCORE_PASSWORD }} \
            --source binkcore.azurecr.io/${{ github.event.repository.name }}:${{ github.event.release.tag_name }} \
            --tag prod
