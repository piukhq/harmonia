name: ci

on:
  push:
    branches: [develop, master]
  pull_request:
    branches: [develop, master]
  release:
    types: [published]

jobs:
  tests:
    name: tests
    runs-on: ubuntu-latest
    env:
      TXM_POSTGRES_USER: postgres
      TXM_POSTGRES_HOST: 127.0.0.1
      TXM_POSTGRES_DB: harmonia
      TXM_REDIS_URL: redis://127.0.0.1:6379/0
      TXM_HERMES_URL: "http://localhost"
      TXM_AAD_TENANT_ID: ""
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: harmonia
      redis:
        image: redis:latest
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v3
      - uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: "."
          security-checks: "vuln"
          vuln-type: library
          ignore-unfixed: true
          exit-code: 0
          severity: UNKNOWN,LOW,MEDIUM
      - uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: "."
          security-checks: "vuln"
          vuln-type: library
          ignore-unfixed: true
          exit-code: 1
          severity: HIGH,CRITICAL
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - run: pip install poetry==1.2.0b3
      - run: poetry config virtualenvs.create false
      - run: poetry config http-basic.bink-pypi 269fdc63-af3d-4eca-8101-8bddc22d6f14 b694b5b1-f97e-49e4-959e-f3c202e3ab91
      - run: poetry install
      - run: alembic upgrade head
      - run: scripts/cibuild

  release_dev:
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    name: release_dev
    environment: Development
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - uses: actions/checkout@v2
      - run: echo "::set-output name=date::$(date +'%FT%H%M%SZ')"
        id: date
      - uses: docker/login-action@v1
        with:
          registry: binkcore.azurecr.io
          username: binkcore
          password: ${{ secrets.ACR_BINKCORE_PASSWORD }}
      - uses: docker/build-push-action@v2
        with:
          push: true
          target: base
          tags: |
            binkcore.azurecr.io/${{ github.event.repository.name }}:${{ steps.date.outputs.date }}
            binkcore.azurecr.io/${{ github.event.repository.name }}:latest
      - uses: docker/build-push-action@v2
        with:
          push: true
          target: harness
          tags: |
            binkcore.azurecr.io/${{ github.event.repository.name }}:harness-${{ steps.date.outputs.date }}

  release_staging:
    if: github.event_name == 'release' && github.event.action == 'published'
    name: release_staging
    environment: Staging
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - uses: actions/checkout@v2
      - name: tag_check
        run: |
          if ! [[ ${{ github.event.release.tag_name }} =~ [0-9]+.[0-9]+.[0-9]+ ]]; then
            exit 1;
          fi
      - uses: docker/login-action@v1
        with:
          registry: binkcore.azurecr.io
          username: binkcore
          password: ${{ secrets.ACR_BINKCORE_PASSWORD }}
      - uses: docker/build-push-action@v2
        with:
          push: true
          target: base
          tags: |
            binkcore.azurecr.io/${{ github.event.repository.name }}:${{ github.event.release.tag_name }}
            binkcore.azurecr.io/${{ github.event.repository.name }}:staging-${{ github.event.release.tag_name }}
            binkcore.azurecr.io/${{ github.event.repository.name }}:staging

  release_production:
    if: github.event_name == 'release' && github.event.action == 'published'
    name: release_production
    environment: Production
    needs: [release_staging]
    runs-on: ubuntu-latest
    container: ghcr.io/binkhq/tagbot:latest
    steps:
      - run: |-
          tagbot \
            --username binkcore \
            --password ${{ secrets.ACR_BINKCORE_PASSWORD }} \
            --source binkcore.azurecr.io/${{ github.event.repository.name }}:${{ github.event.release.tag_name }} \
            --tag prod-${{ github.event.release.tag_name }}
          tagbot \
            --username binkcore \
            --password ${{ secrets.ACR_BINKCORE_PASSWORD }} \
            --source binkcore.azurecr.io/${{ github.event.repository.name }}:${{ github.event.release.tag_name }} \
            --tag prod
